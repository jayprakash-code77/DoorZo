<% layout("./layouts/boilerplate.ejs") %>

    <!-- <h3>All Listings</h3> -->

    <style>
        #filters {
            display: flex;
            flex-wrap: wrap;
            align-items: center;
        }

        .filter {
            text-align: center;
            margin-right: 2rem;
            margin-top: 2rem;
            opacity: 0.7;
            cursor: pointer;
        }

        .filter:hover {
            opacity: 1;
        }

        .form-switch {
            font-size: large;
        }

        .tax-info {
            display: none;
        }

        .toggle-tax-switch {
            border: 1px solid black;
            opacity: 0.9;
            border-radius: 1rem;
            padding: 13px;
            height: 3.25rem;
            padding: 1rem;
            margin-left: 5rem;
            display: flex;
            align-items: center;

        }

        #switchCheckDefault {
            margin-left: 2rem;
            cursor: pointer;
        }


        /* Add a style for active filter */
        .filter.active {
            opacity: 1;
            border-bottom: 2px solid #007bff;
            /* Example: highlight active filter */
            padding-bottom: 5px;
        }
    </style>



 <div id="filters">
    <div class="filter" data-category="All List">
        <div><i class="fa-solid fa-earth-americas"></i></div>
        <p>All List</p>
    </div>
    <div class="filter" data-category="Trending">
        <div><i class="fa-solid fa-fire"></i></div>
        <p>Trending</p>
    </div>
    <div class="filter" data-category="Rooms">
        <div><i class="fa-solid fa-bed"></i></div>
        <p>Rooms</p>
    </div>
    <div class="filter" data-category="Villa">
        <div><i class="fa-solid fa-house-chimney"></i></div>
        <p>Villa</p>
    </div>
    <div class="filter" data-category="Castles">
        <div><i class="fa-solid fa-chess-rook"></i></div>
        <p>Castles</p>
    </div>
    <div class="filter" data-category="Mountains">
        <div><i class="fa-solid fa-mountain-sun"></i></div>
        <p>Mountains</p>
    </div>
    <div class="filter" data-category="Pools">
        <div><i class="fa-solid fa-person-swimming"></i></div>
        <p>Pools</p>
    </div>
    <div class="filter" data-category="Camping">
        <div><i class="fa-solid fa-tents"></i></div>
        <p>Camping</p>
    </div>
    <div class="filter" data-category="Farms">
        <div><i class="fa-solid fa-cow"></i></div>
        <p>Farms</p>
    </div>
    <div class="filter" data-category="Arctic">
        <div><i class="fa-solid fa-snowman"></i></div>
        <p>Arctic</p>
    </div>

    <div class="toggle-tax-switch">
        <div class="form-check-reverse form-switch">
            <input class="form-check-input" type="checkbox" role="switch" id="switchCheckDefault">
            <label class="form-check-label" for="switchCheckDefault">Show Prices with Tax</label>
        </div>
    </div>
</div>

<div class="row row-cols-lg-3 row-cols-md-2 row-cols-sm-1 mt-3">
    <% list.forEach(listItem=> { %>
        <a href="/listing/<%= listItem._id %>" class="listing-links">
            <div class="card col">
                <img src="<%= isValidImageUrl(listItem.image.url) ? listItem.image.url : '/images/default.avif' %>"
                    class="card-img-top listing-img" alt="Listing Image"
                    onerror="this.onerror=null; this.src='/images/default.avif';">

                <div class="card-body">
                    <p class="card-text">
                        <b><%= listItem.title %></b> <br>
                        &#8377;<%= listItem.price ? listItem.price.toLocaleString("en-IN") : "Price Not Available" %> / night
                        <i class="tax-info"> &nbsp; &nbsp; +18% GST</i>
                    </p>
                </div>
            </div>
        </a>
    <% }) %>
</div>

<script>
    // Tax toggle functionality (your existing code)
    let infoElement = document.getElementById("switchCheckDefault");
    let infoTax = document.getElementsByClassName("tax-info");

    infoElement.addEventListener("click", () => {
        for (info of infoTax) {
            if (info.style.display != "inline") {
                info.style.display = "inline";
            } else {
                info.style.display = "none";
            }
        }
    });

    // Filter functionality
    const filterIcons = document.querySelectorAll('.filter');

    filterIcons.forEach(filter => {
        filter.addEventListener('click', () => {
            const category = filter.dataset.category; // Get the category from the data-category attribute
            window.location.href = `/listing?category=${encodeURIComponent(category)}`; // Redirect with query parameter
        });
    });

    // Optional: Highlight the active filter
    document.addEventListener('DOMContentLoaded', () => {
        const urlParams = new URLSearchParams(window.location.search);
        const activeCategory = urlParams.get('category') || 'All List'; // Default to 'All List'

        filterIcons.forEach(filter => {
            if (filter.dataset.category === activeCategory) {
                filter.classList.add('active');
            } else {
                filter.classList.remove('active');
            }
        });
    });
</script>
